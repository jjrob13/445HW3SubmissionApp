//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HW3SubmissionPage.StorageService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StorageService.IStorageService")]
    public interface IStorageService {
        
        // CODEGEN: Generating message contract since the wrapper name (FileUpload) of message FileUpload does not match the default value (uploadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/uploadFile", ReplyAction="http://tempuri.org/IStorageService/uploadFileResponse")]
        HW3SubmissionPage.StorageService.FileUploadResponse uploadFile(HW3SubmissionPage.StorageService.FileUpload request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageService/uploadFile", ReplyAction="http://tempuri.org/IStorageService/uploadFileResponse")]
        System.Threading.Tasks.Task<HW3SubmissionPage.StorageService.FileUploadResponse> uploadFileAsync(HW3SubmissionPage.StorageService.FileUpload request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUpload", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileUpload {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string nameOfFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream uploadedFileDataStream;
        
        public FileUpload() {
        }
        
        public FileUpload(string nameOfFile, System.IO.Stream uploadedFileDataStream) {
            this.nameOfFile = nameOfFile;
            this.uploadedFileDataStream = uploadedFileDataStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUploadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileUploadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string FileURL;
        
        public FileUploadResponse() {
        }
        
        public FileUploadResponse(string FileURL) {
            this.FileURL = FileURL;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStorageServiceChannel : HW3SubmissionPage.StorageService.IStorageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StorageServiceClient : System.ServiceModel.ClientBase<HW3SubmissionPage.StorageService.IStorageService>, HW3SubmissionPage.StorageService.IStorageService {
        
        public StorageServiceClient() {
        }
        
        public StorageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StorageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HW3SubmissionPage.StorageService.FileUploadResponse HW3SubmissionPage.StorageService.IStorageService.uploadFile(HW3SubmissionPage.StorageService.FileUpload request) {
            return base.Channel.uploadFile(request);
        }
        
        public string uploadFile(string nameOfFile, System.IO.Stream uploadedFileDataStream) {
            HW3SubmissionPage.StorageService.FileUpload inValue = new HW3SubmissionPage.StorageService.FileUpload();
            inValue.nameOfFile = nameOfFile;
            inValue.uploadedFileDataStream = uploadedFileDataStream;
            HW3SubmissionPage.StorageService.FileUploadResponse retVal = ((HW3SubmissionPage.StorageService.IStorageService)(this)).uploadFile(inValue);
            return retVal.FileURL;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HW3SubmissionPage.StorageService.FileUploadResponse> HW3SubmissionPage.StorageService.IStorageService.uploadFileAsync(HW3SubmissionPage.StorageService.FileUpload request) {
            return base.Channel.uploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<HW3SubmissionPage.StorageService.FileUploadResponse> uploadFileAsync(string nameOfFile, System.IO.Stream uploadedFileDataStream) {
            HW3SubmissionPage.StorageService.FileUpload inValue = new HW3SubmissionPage.StorageService.FileUpload();
            inValue.nameOfFile = nameOfFile;
            inValue.uploadedFileDataStream = uploadedFileDataStream;
            return ((HW3SubmissionPage.StorageService.IStorageService)(this)).uploadFileAsync(inValue);
        }
    }
}
